<?php
/**
 * EventInsights2017Test
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace TBA-API\v3client;

use PHPUnit\Framework\TestCase;

/**
 * EventInsights2017Test Class Doc Comment
 *
 * @category    Class
 * @description Insights for FIRST STEAMWORKS qualification and elimination matches.
 * @package     TBA-API\v3client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class EventInsights2017Test extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "EventInsights2017"
     */
    public function testEventInsights2017()
    {
    }

    /**
     * Test attribute "average_foul_score"
     */
    public function testPropertyAverageFoulScore()
    {
    }

    /**
     * Test attribute "average_fuel_points"
     */
    public function testPropertyAverageFuelPoints()
    {
    }

    /**
     * Test attribute "average_fuel_points_auto"
     */
    public function testPropertyAverageFuelPointsAuto()
    {
    }

    /**
     * Test attribute "average_fuel_points_teleop"
     */
    public function testPropertyAverageFuelPointsTeleop()
    {
    }

    /**
     * Test attribute "average_high_goals"
     */
    public function testPropertyAverageHighGoals()
    {
    }

    /**
     * Test attribute "average_high_goals_auto"
     */
    public function testPropertyAverageHighGoalsAuto()
    {
    }

    /**
     * Test attribute "average_high_goals_teleop"
     */
    public function testPropertyAverageHighGoalsTeleop()
    {
    }

    /**
     * Test attribute "average_low_goals"
     */
    public function testPropertyAverageLowGoals()
    {
    }

    /**
     * Test attribute "average_low_goals_auto"
     */
    public function testPropertyAverageLowGoalsAuto()
    {
    }

    /**
     * Test attribute "average_low_goals_teleop"
     */
    public function testPropertyAverageLowGoalsTeleop()
    {
    }

    /**
     * Test attribute "average_mobility_points_auto"
     */
    public function testPropertyAverageMobilityPointsAuto()
    {
    }

    /**
     * Test attribute "average_points_auto"
     */
    public function testPropertyAveragePointsAuto()
    {
    }

    /**
     * Test attribute "average_points_teleop"
     */
    public function testPropertyAveragePointsTeleop()
    {
    }

    /**
     * Test attribute "average_rotor_points"
     */
    public function testPropertyAverageRotorPoints()
    {
    }

    /**
     * Test attribute "average_rotor_points_auto"
     */
    public function testPropertyAverageRotorPointsAuto()
    {
    }

    /**
     * Test attribute "average_rotor_points_teleop"
     */
    public function testPropertyAverageRotorPointsTeleop()
    {
    }

    /**
     * Test attribute "average_score"
     */
    public function testPropertyAverageScore()
    {
    }

    /**
     * Test attribute "average_takeoff_points_teleop"
     */
    public function testPropertyAverageTakeoffPointsTeleop()
    {
    }

    /**
     * Test attribute "average_win_margin"
     */
    public function testPropertyAverageWinMargin()
    {
    }

    /**
     * Test attribute "average_win_score"
     */
    public function testPropertyAverageWinScore()
    {
    }

    /**
     * Test attribute "high_kpa"
     */
    public function testPropertyHighKpa()
    {
    }

    /**
     * Test attribute "high_score"
     */
    public function testPropertyHighScore()
    {
    }

    /**
     * Test attribute "kpa_achieved"
     */
    public function testPropertyKpaAchieved()
    {
    }

    /**
     * Test attribute "mobility_counts"
     */
    public function testPropertyMobilityCounts()
    {
    }

    /**
     * Test attribute "rotor_1_engaged"
     */
    public function testPropertyRotor1Engaged()
    {
    }

    /**
     * Test attribute "rotor_1_engaged_auto"
     */
    public function testPropertyRotor1EngagedAuto()
    {
    }

    /**
     * Test attribute "rotor_2_engaged"
     */
    public function testPropertyRotor2Engaged()
    {
    }

    /**
     * Test attribute "rotor_2_engaged_auto"
     */
    public function testPropertyRotor2EngagedAuto()
    {
    }

    /**
     * Test attribute "rotor_3_engaged"
     */
    public function testPropertyRotor3Engaged()
    {
    }

    /**
     * Test attribute "rotor_4_engaged"
     */
    public function testPropertyRotor4Engaged()
    {
    }

    /**
     * Test attribute "takeoff_counts"
     */
    public function testPropertyTakeoffCounts()
    {
    }

    /**
     * Test attribute "unicorn_matches"
     */
    public function testPropertyUnicornMatches()
    {
    }
}
