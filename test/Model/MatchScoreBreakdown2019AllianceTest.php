<?php
/**
 * MatchScoreBreakdown2019AllianceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace TBA-API\v3client;

use PHPUnit\Framework\TestCase;

/**
 * MatchScoreBreakdown2019AllianceTest Class Doc Comment
 *
 * @category    Class
 * @description MatchScoreBreakdown2019Alliance
 * @package     TBA-API\v3client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MatchScoreBreakdown2019AllianceTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MatchScoreBreakdown2019Alliance"
     */
    public function testMatchScoreBreakdown2019Alliance()
    {
    }

    /**
     * Test attribute "adjust_points"
     */
    public function testPropertyAdjustPoints()
    {
    }

    /**
     * Test attribute "auto_points"
     */
    public function testPropertyAutoPoints()
    {
    }

    /**
     * Test attribute "bay1"
     */
    public function testPropertyBay1()
    {
    }

    /**
     * Test attribute "bay2"
     */
    public function testPropertyBay2()
    {
    }

    /**
     * Test attribute "bay3"
     */
    public function testPropertyBay3()
    {
    }

    /**
     * Test attribute "bay4"
     */
    public function testPropertyBay4()
    {
    }

    /**
     * Test attribute "bay5"
     */
    public function testPropertyBay5()
    {
    }

    /**
     * Test attribute "bay6"
     */
    public function testPropertyBay6()
    {
    }

    /**
     * Test attribute "bay7"
     */
    public function testPropertyBay7()
    {
    }

    /**
     * Test attribute "bay8"
     */
    public function testPropertyBay8()
    {
    }

    /**
     * Test attribute "cargo_points"
     */
    public function testPropertyCargoPoints()
    {
    }

    /**
     * Test attribute "complete_rocket_ranking_point"
     */
    public function testPropertyCompleteRocketRankingPoint()
    {
    }

    /**
     * Test attribute "completed_rocket_far"
     */
    public function testPropertyCompletedRocketFar()
    {
    }

    /**
     * Test attribute "completed_rocket_near"
     */
    public function testPropertyCompletedRocketNear()
    {
    }

    /**
     * Test attribute "endgame_robot1"
     */
    public function testPropertyEndgameRobot1()
    {
    }

    /**
     * Test attribute "endgame_robot2"
     */
    public function testPropertyEndgameRobot2()
    {
    }

    /**
     * Test attribute "endgame_robot3"
     */
    public function testPropertyEndgameRobot3()
    {
    }

    /**
     * Test attribute "foul_count"
     */
    public function testPropertyFoulCount()
    {
    }

    /**
     * Test attribute "foul_points"
     */
    public function testPropertyFoulPoints()
    {
    }

    /**
     * Test attribute "hab_climb_points"
     */
    public function testPropertyHabClimbPoints()
    {
    }

    /**
     * Test attribute "hab_docking_ranking_point"
     */
    public function testPropertyHabDockingRankingPoint()
    {
    }

    /**
     * Test attribute "hab_line_robot1"
     */
    public function testPropertyHabLineRobot1()
    {
    }

    /**
     * Test attribute "hab_line_robot2"
     */
    public function testPropertyHabLineRobot2()
    {
    }

    /**
     * Test attribute "hab_line_robot3"
     */
    public function testPropertyHabLineRobot3()
    {
    }

    /**
     * Test attribute "hatch_panel_points"
     */
    public function testPropertyHatchPanelPoints()
    {
    }

    /**
     * Test attribute "low_left_rocket_far"
     */
    public function testPropertyLowLeftRocketFar()
    {
    }

    /**
     * Test attribute "low_left_rocket_near"
     */
    public function testPropertyLowLeftRocketNear()
    {
    }

    /**
     * Test attribute "low_right_rocket_far"
     */
    public function testPropertyLowRightRocketFar()
    {
    }

    /**
     * Test attribute "low_right_rocket_near"
     */
    public function testPropertyLowRightRocketNear()
    {
    }

    /**
     * Test attribute "mid_left_rocket_far"
     */
    public function testPropertyMidLeftRocketFar()
    {
    }

    /**
     * Test attribute "mid_left_rocket_near"
     */
    public function testPropertyMidLeftRocketNear()
    {
    }

    /**
     * Test attribute "mid_right_rocket_far"
     */
    public function testPropertyMidRightRocketFar()
    {
    }

    /**
     * Test attribute "mid_right_rocket_near"
     */
    public function testPropertyMidRightRocketNear()
    {
    }

    /**
     * Test attribute "pre_match_bay1"
     */
    public function testPropertyPreMatchBay1()
    {
    }

    /**
     * Test attribute "pre_match_bay2"
     */
    public function testPropertyPreMatchBay2()
    {
    }

    /**
     * Test attribute "pre_match_bay3"
     */
    public function testPropertyPreMatchBay3()
    {
    }

    /**
     * Test attribute "pre_match_bay6"
     */
    public function testPropertyPreMatchBay6()
    {
    }

    /**
     * Test attribute "pre_match_bay7"
     */
    public function testPropertyPreMatchBay7()
    {
    }

    /**
     * Test attribute "pre_match_bay8"
     */
    public function testPropertyPreMatchBay8()
    {
    }

    /**
     * Test attribute "pre_match_level_robot1"
     */
    public function testPropertyPreMatchLevelRobot1()
    {
    }

    /**
     * Test attribute "pre_match_level_robot2"
     */
    public function testPropertyPreMatchLevelRobot2()
    {
    }

    /**
     * Test attribute "pre_match_level_robot3"
     */
    public function testPropertyPreMatchLevelRobot3()
    {
    }

    /**
     * Test attribute "rp"
     */
    public function testPropertyRp()
    {
    }

    /**
     * Test attribute "sand_storm_bonus_points"
     */
    public function testPropertySandStormBonusPoints()
    {
    }

    /**
     * Test attribute "tech_foul_count"
     */
    public function testPropertyTechFoulCount()
    {
    }

    /**
     * Test attribute "teleop_points"
     */
    public function testPropertyTeleopPoints()
    {
    }

    /**
     * Test attribute "top_left_rocket_far"
     */
    public function testPropertyTopLeftRocketFar()
    {
    }

    /**
     * Test attribute "top_left_rocket_near"
     */
    public function testPropertyTopLeftRocketNear()
    {
    }

    /**
     * Test attribute "top_right_rocket_far"
     */
    public function testPropertyTopRightRocketFar()
    {
    }

    /**
     * Test attribute "top_right_rocket_near"
     */
    public function testPropertyTopRightRocketNear()
    {
    }

    /**
     * Test attribute "total_points"
     */
    public function testPropertyTotalPoints()
    {
    }
}
