<?php
/**
 * MatchScoreBreakdown2018AllianceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace TBA-API\v3client;

use PHPUnit\Framework\TestCase;

/**
 * MatchScoreBreakdown2018AllianceTest Class Doc Comment
 *
 * @category    Class
 * @description MatchScoreBreakdown2018Alliance
 * @package     TBA-API\v3client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MatchScoreBreakdown2018AllianceTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MatchScoreBreakdown2018Alliance"
     */
    public function testMatchScoreBreakdown2018Alliance()
    {
    }

    /**
     * Test attribute "adjust_points"
     */
    public function testPropertyAdjustPoints()
    {
    }

    /**
     * Test attribute "auto_ownership_points"
     */
    public function testPropertyAutoOwnershipPoints()
    {
    }

    /**
     * Test attribute "auto_points"
     */
    public function testPropertyAutoPoints()
    {
    }

    /**
     * Test attribute "auto_quest_ranking_point"
     */
    public function testPropertyAutoQuestRankingPoint()
    {
    }

    /**
     * Test attribute "auto_robot1"
     */
    public function testPropertyAutoRobot1()
    {
    }

    /**
     * Test attribute "auto_robot2"
     */
    public function testPropertyAutoRobot2()
    {
    }

    /**
     * Test attribute "auto_robot3"
     */
    public function testPropertyAutoRobot3()
    {
    }

    /**
     * Test attribute "auto_run_points"
     */
    public function testPropertyAutoRunPoints()
    {
    }

    /**
     * Test attribute "auto_scale_ownership_sec"
     */
    public function testPropertyAutoScaleOwnershipSec()
    {
    }

    /**
     * Test attribute "auto_switch_at_zero"
     */
    public function testPropertyAutoSwitchAtZero()
    {
    }

    /**
     * Test attribute "auto_switch_ownership_sec"
     */
    public function testPropertyAutoSwitchOwnershipSec()
    {
    }

    /**
     * Test attribute "endgame_points"
     */
    public function testPropertyEndgamePoints()
    {
    }

    /**
     * Test attribute "endgame_robot1"
     */
    public function testPropertyEndgameRobot1()
    {
    }

    /**
     * Test attribute "endgame_robot2"
     */
    public function testPropertyEndgameRobot2()
    {
    }

    /**
     * Test attribute "endgame_robot3"
     */
    public function testPropertyEndgameRobot3()
    {
    }

    /**
     * Test attribute "face_the_boss_ranking_point"
     */
    public function testPropertyFaceTheBossRankingPoint()
    {
    }

    /**
     * Test attribute "foul_count"
     */
    public function testPropertyFoulCount()
    {
    }

    /**
     * Test attribute "foul_points"
     */
    public function testPropertyFoulPoints()
    {
    }

    /**
     * Test attribute "rp"
     */
    public function testPropertyRp()
    {
    }

    /**
     * Test attribute "tech_foul_count"
     */
    public function testPropertyTechFoulCount()
    {
    }

    /**
     * Test attribute "teleop_ownership_points"
     */
    public function testPropertyTeleopOwnershipPoints()
    {
    }

    /**
     * Test attribute "teleop_points"
     */
    public function testPropertyTeleopPoints()
    {
    }

    /**
     * Test attribute "teleop_scale_boost_sec"
     */
    public function testPropertyTeleopScaleBoostSec()
    {
    }

    /**
     * Test attribute "teleop_scale_force_sec"
     */
    public function testPropertyTeleopScaleForceSec()
    {
    }

    /**
     * Test attribute "teleop_scale_ownership_sec"
     */
    public function testPropertyTeleopScaleOwnershipSec()
    {
    }

    /**
     * Test attribute "teleop_switch_boost_sec"
     */
    public function testPropertyTeleopSwitchBoostSec()
    {
    }

    /**
     * Test attribute "teleop_switch_force_sec"
     */
    public function testPropertyTeleopSwitchForceSec()
    {
    }

    /**
     * Test attribute "teleop_switch_ownership_sec"
     */
    public function testPropertyTeleopSwitchOwnershipSec()
    {
    }

    /**
     * Test attribute "total_points"
     */
    public function testPropertyTotalPoints()
    {
    }

    /**
     * Test attribute "vault_boost_played"
     */
    public function testPropertyVaultBoostPlayed()
    {
    }

    /**
     * Test attribute "vault_boost_total"
     */
    public function testPropertyVaultBoostTotal()
    {
    }

    /**
     * Test attribute "vault_force_played"
     */
    public function testPropertyVaultForcePlayed()
    {
    }

    /**
     * Test attribute "vault_force_total"
     */
    public function testPropertyVaultForceTotal()
    {
    }

    /**
     * Test attribute "vault_levitate_played"
     */
    public function testPropertyVaultLevitatePlayed()
    {
    }

    /**
     * Test attribute "vault_levitate_total"
     */
    public function testPropertyVaultLevitateTotal()
    {
    }

    /**
     * Test attribute "vault_points"
     */
    public function testPropertyVaultPoints()
    {
    }

    /**
     * Test attribute "tba_game_data"
     */
    public function testPropertyTbaGameData()
    {
    }
}
