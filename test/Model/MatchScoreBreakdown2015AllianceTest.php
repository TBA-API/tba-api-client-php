<?php
/**
 * MatchScoreBreakdown2015AllianceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace TBA-API\v3client;

use PHPUnit\Framework\TestCase;

/**
 * MatchScoreBreakdown2015AllianceTest Class Doc Comment
 *
 * @category    Class
 * @description MatchScoreBreakdown2015Alliance
 * @package     TBA-API\v3client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MatchScoreBreakdown2015AllianceTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MatchScoreBreakdown2015Alliance"
     */
    public function testMatchScoreBreakdown2015Alliance()
    {
    }

    /**
     * Test attribute "auto_points"
     */
    public function testPropertyAutoPoints()
    {
    }

    /**
     * Test attribute "teleop_points"
     */
    public function testPropertyTeleopPoints()
    {
    }

    /**
     * Test attribute "container_points"
     */
    public function testPropertyContainerPoints()
    {
    }

    /**
     * Test attribute "tote_points"
     */
    public function testPropertyTotePoints()
    {
    }

    /**
     * Test attribute "litter_points"
     */
    public function testPropertyLitterPoints()
    {
    }

    /**
     * Test attribute "foul_points"
     */
    public function testPropertyFoulPoints()
    {
    }

    /**
     * Test attribute "adjust_points"
     */
    public function testPropertyAdjustPoints()
    {
    }

    /**
     * Test attribute "total_points"
     */
    public function testPropertyTotalPoints()
    {
    }

    /**
     * Test attribute "foul_count"
     */
    public function testPropertyFoulCount()
    {
    }

    /**
     * Test attribute "tote_count_far"
     */
    public function testPropertyToteCountFar()
    {
    }

    /**
     * Test attribute "tote_count_near"
     */
    public function testPropertyToteCountNear()
    {
    }

    /**
     * Test attribute "tote_set"
     */
    public function testPropertyToteSet()
    {
    }

    /**
     * Test attribute "tote_stack"
     */
    public function testPropertyToteStack()
    {
    }

    /**
     * Test attribute "container_count_level1"
     */
    public function testPropertyContainerCountLevel1()
    {
    }

    /**
     * Test attribute "container_count_level2"
     */
    public function testPropertyContainerCountLevel2()
    {
    }

    /**
     * Test attribute "container_count_level3"
     */
    public function testPropertyContainerCountLevel3()
    {
    }

    /**
     * Test attribute "container_count_level4"
     */
    public function testPropertyContainerCountLevel4()
    {
    }

    /**
     * Test attribute "container_count_level5"
     */
    public function testPropertyContainerCountLevel5()
    {
    }

    /**
     * Test attribute "container_count_level6"
     */
    public function testPropertyContainerCountLevel6()
    {
    }

    /**
     * Test attribute "container_set"
     */
    public function testPropertyContainerSet()
    {
    }

    /**
     * Test attribute "litter_count_container"
     */
    public function testPropertyLitterCountContainer()
    {
    }

    /**
     * Test attribute "litter_count_landfill"
     */
    public function testPropertyLitterCountLandfill()
    {
    }

    /**
     * Test attribute "litter_count_unprocessed"
     */
    public function testPropertyLitterCountUnprocessed()
    {
    }

    /**
     * Test attribute "robot_set"
     */
    public function testPropertyRobotSet()
    {
    }
}
