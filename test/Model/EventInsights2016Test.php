<?php
/**
 * EventInsights2016Test
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace TBA-API\v3client;

use PHPUnit\Framework\TestCase;

/**
 * EventInsights2016Test Class Doc Comment
 *
 * @category    Class
 * @description Insights for FIRST Stronghold qualification and elimination matches.
 * @package     TBA-API\v3client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class EventInsights2016Test extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "EventInsights2016"
     */
    public function testEventInsights2016()
    {
    }

    /**
     * Test attribute "low_bar"
     */
    public function testPropertyLowBar()
    {
    }

    /**
     * Test attribute "a_cheval_de_frise"
     */
    public function testPropertyAChevalDeFrise()
    {
    }

    /**
     * Test attribute "a_portcullis"
     */
    public function testPropertyAPortcullis()
    {
    }

    /**
     * Test attribute "b_ramparts"
     */
    public function testPropertyBRamparts()
    {
    }

    /**
     * Test attribute "b_moat"
     */
    public function testPropertyBMoat()
    {
    }

    /**
     * Test attribute "c_sally_port"
     */
    public function testPropertyCSallyPort()
    {
    }

    /**
     * Test attribute "c_drawbridge"
     */
    public function testPropertyCDrawbridge()
    {
    }

    /**
     * Test attribute "d_rough_terrain"
     */
    public function testPropertyDRoughTerrain()
    {
    }

    /**
     * Test attribute "d_rock_wall"
     */
    public function testPropertyDRockWall()
    {
    }

    /**
     * Test attribute "average_high_goals"
     */
    public function testPropertyAverageHighGoals()
    {
    }

    /**
     * Test attribute "average_low_goals"
     */
    public function testPropertyAverageLowGoals()
    {
    }

    /**
     * Test attribute "breaches"
     */
    public function testPropertyBreaches()
    {
    }

    /**
     * Test attribute "scales"
     */
    public function testPropertyScales()
    {
    }

    /**
     * Test attribute "challenges"
     */
    public function testPropertyChallenges()
    {
    }

    /**
     * Test attribute "captures"
     */
    public function testPropertyCaptures()
    {
    }

    /**
     * Test attribute "average_win_score"
     */
    public function testPropertyAverageWinScore()
    {
    }

    /**
     * Test attribute "average_win_margin"
     */
    public function testPropertyAverageWinMargin()
    {
    }

    /**
     * Test attribute "average_score"
     */
    public function testPropertyAverageScore()
    {
    }

    /**
     * Test attribute "average_auto_score"
     */
    public function testPropertyAverageAutoScore()
    {
    }

    /**
     * Test attribute "average_crossing_score"
     */
    public function testPropertyAverageCrossingScore()
    {
    }

    /**
     * Test attribute "average_boulder_score"
     */
    public function testPropertyAverageBoulderScore()
    {
    }

    /**
     * Test attribute "average_tower_score"
     */
    public function testPropertyAverageTowerScore()
    {
    }

    /**
     * Test attribute "average_foul_score"
     */
    public function testPropertyAverageFoulScore()
    {
    }

    /**
     * Test attribute "high_score"
     */
    public function testPropertyHighScore()
    {
    }
}
