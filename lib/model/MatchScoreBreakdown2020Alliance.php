<?php
/**
 * MatchScoreBreakdown2020Alliance
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace TBA-API\v3client\TBA-API\v3client\model;

use \ArrayAccess;
use \TBA-API\v3client\ObjectSerializer;

/**
 * MatchScoreBreakdown2020Alliance Class Doc Comment
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MatchScoreBreakdown2020Alliance implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Match_Score_Breakdown_2020_Alliance';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'init_line_robot1' => 'string',
        'endgame_robot1' => 'string',
        'init_line_robot2' => 'string',
        'endgame_robot2' => 'string',
        'init_line_robot3' => 'string',
        'endgame_robot3' => 'string',
        'auto_cells_bottom' => 'int',
        'auto_cells_outer' => 'int',
        'auto_cells_inner' => 'int',
        'teleop_cells_bottom' => 'int',
        'teleop_cells_outer' => 'int',
        'teleop_cells_inner' => 'int',
        'stage1_activated' => 'bool',
        'stage2_activated' => 'bool',
        'stage3_activated' => 'bool',
        'stage3_target_color' => 'string',
        'endgame_rung_is_level' => 'string',
        'auto_init_line_points' => 'int',
        'auto_cell_points' => 'int',
        'auto_points' => 'int',
        'teleop_cell_points' => 'int',
        'control_panel_points' => 'int',
        'endgame_points' => 'int',
        'teleop_points' => 'int',
        'shield_operational_ranking_point' => 'bool',
        'shield_energized_ranking_point' => 'bool',
        'tba_shield_energized_ranking_point_from_foul' => 'bool',
        'tba_num_robots_hanging' => 'int',
        'foul_count' => 'int',
        'tech_foul_count' => 'int',
        'adjust_points' => 'int',
        'foul_points' => 'int',
        'rp' => 'int',
        'total_points' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'init_line_robot1' => null,
        'endgame_robot1' => null,
        'init_line_robot2' => null,
        'endgame_robot2' => null,
        'init_line_robot3' => null,
        'endgame_robot3' => null,
        'auto_cells_bottom' => null,
        'auto_cells_outer' => null,
        'auto_cells_inner' => null,
        'teleop_cells_bottom' => null,
        'teleop_cells_outer' => null,
        'teleop_cells_inner' => null,
        'stage1_activated' => null,
        'stage2_activated' => null,
        'stage3_activated' => null,
        'stage3_target_color' => null,
        'endgame_rung_is_level' => null,
        'auto_init_line_points' => null,
        'auto_cell_points' => null,
        'auto_points' => null,
        'teleop_cell_points' => null,
        'control_panel_points' => null,
        'endgame_points' => null,
        'teleop_points' => null,
        'shield_operational_ranking_point' => null,
        'shield_energized_ranking_point' => null,
        'tba_shield_energized_ranking_point_from_foul' => null,
        'tba_num_robots_hanging' => null,
        'foul_count' => null,
        'tech_foul_count' => null,
        'adjust_points' => null,
        'foul_points' => null,
        'rp' => null,
        'total_points' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'init_line_robot1' => 'initLineRobot1',
        'endgame_robot1' => 'endgameRobot1',
        'init_line_robot2' => 'initLineRobot2',
        'endgame_robot2' => 'endgameRobot2',
        'init_line_robot3' => 'initLineRobot3',
        'endgame_robot3' => 'endgameRobot3',
        'auto_cells_bottom' => 'autoCellsBottom',
        'auto_cells_outer' => 'autoCellsOuter',
        'auto_cells_inner' => 'autoCellsInner',
        'teleop_cells_bottom' => 'teleopCellsBottom',
        'teleop_cells_outer' => 'teleopCellsOuter',
        'teleop_cells_inner' => 'teleopCellsInner',
        'stage1_activated' => 'stage1Activated',
        'stage2_activated' => 'stage2Activated',
        'stage3_activated' => 'stage3Activated',
        'stage3_target_color' => 'stage3TargetColor',
        'endgame_rung_is_level' => 'endgameRungIsLevel',
        'auto_init_line_points' => 'autoInitLinePoints',
        'auto_cell_points' => 'autoCellPoints',
        'auto_points' => 'autoPoints',
        'teleop_cell_points' => 'teleopCellPoints',
        'control_panel_points' => 'controlPanelPoints',
        'endgame_points' => 'endgamePoints',
        'teleop_points' => 'teleopPoints',
        'shield_operational_ranking_point' => 'shieldOperationalRankingPoint',
        'shield_energized_ranking_point' => 'shieldEnergizedRankingPoint',
        'tba_shield_energized_ranking_point_from_foul' => 'tba_shieldEnergizedRankingPointFromFoul',
        'tba_num_robots_hanging' => 'tba_numRobotsHanging',
        'foul_count' => 'foulCount',
        'tech_foul_count' => 'techFoulCount',
        'adjust_points' => 'adjustPoints',
        'foul_points' => 'foulPoints',
        'rp' => 'rp',
        'total_points' => 'totalPoints'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'init_line_robot1' => 'setInitLineRobot1',
        'endgame_robot1' => 'setEndgameRobot1',
        'init_line_robot2' => 'setInitLineRobot2',
        'endgame_robot2' => 'setEndgameRobot2',
        'init_line_robot3' => 'setInitLineRobot3',
        'endgame_robot3' => 'setEndgameRobot3',
        'auto_cells_bottom' => 'setAutoCellsBottom',
        'auto_cells_outer' => 'setAutoCellsOuter',
        'auto_cells_inner' => 'setAutoCellsInner',
        'teleop_cells_bottom' => 'setTeleopCellsBottom',
        'teleop_cells_outer' => 'setTeleopCellsOuter',
        'teleop_cells_inner' => 'setTeleopCellsInner',
        'stage1_activated' => 'setStage1Activated',
        'stage2_activated' => 'setStage2Activated',
        'stage3_activated' => 'setStage3Activated',
        'stage3_target_color' => 'setStage3TargetColor',
        'endgame_rung_is_level' => 'setEndgameRungIsLevel',
        'auto_init_line_points' => 'setAutoInitLinePoints',
        'auto_cell_points' => 'setAutoCellPoints',
        'auto_points' => 'setAutoPoints',
        'teleop_cell_points' => 'setTeleopCellPoints',
        'control_panel_points' => 'setControlPanelPoints',
        'endgame_points' => 'setEndgamePoints',
        'teleop_points' => 'setTeleopPoints',
        'shield_operational_ranking_point' => 'setShieldOperationalRankingPoint',
        'shield_energized_ranking_point' => 'setShieldEnergizedRankingPoint',
        'tba_shield_energized_ranking_point_from_foul' => 'setTbaShieldEnergizedRankingPointFromFoul',
        'tba_num_robots_hanging' => 'setTbaNumRobotsHanging',
        'foul_count' => 'setFoulCount',
        'tech_foul_count' => 'setTechFoulCount',
        'adjust_points' => 'setAdjustPoints',
        'foul_points' => 'setFoulPoints',
        'rp' => 'setRp',
        'total_points' => 'setTotalPoints'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'init_line_robot1' => 'getInitLineRobot1',
        'endgame_robot1' => 'getEndgameRobot1',
        'init_line_robot2' => 'getInitLineRobot2',
        'endgame_robot2' => 'getEndgameRobot2',
        'init_line_robot3' => 'getInitLineRobot3',
        'endgame_robot3' => 'getEndgameRobot3',
        'auto_cells_bottom' => 'getAutoCellsBottom',
        'auto_cells_outer' => 'getAutoCellsOuter',
        'auto_cells_inner' => 'getAutoCellsInner',
        'teleop_cells_bottom' => 'getTeleopCellsBottom',
        'teleop_cells_outer' => 'getTeleopCellsOuter',
        'teleop_cells_inner' => 'getTeleopCellsInner',
        'stage1_activated' => 'getStage1Activated',
        'stage2_activated' => 'getStage2Activated',
        'stage3_activated' => 'getStage3Activated',
        'stage3_target_color' => 'getStage3TargetColor',
        'endgame_rung_is_level' => 'getEndgameRungIsLevel',
        'auto_init_line_points' => 'getAutoInitLinePoints',
        'auto_cell_points' => 'getAutoCellPoints',
        'auto_points' => 'getAutoPoints',
        'teleop_cell_points' => 'getTeleopCellPoints',
        'control_panel_points' => 'getControlPanelPoints',
        'endgame_points' => 'getEndgamePoints',
        'teleop_points' => 'getTeleopPoints',
        'shield_operational_ranking_point' => 'getShieldOperationalRankingPoint',
        'shield_energized_ranking_point' => 'getShieldEnergizedRankingPoint',
        'tba_shield_energized_ranking_point_from_foul' => 'getTbaShieldEnergizedRankingPointFromFoul',
        'tba_num_robots_hanging' => 'getTbaNumRobotsHanging',
        'foul_count' => 'getFoulCount',
        'tech_foul_count' => 'getTechFoulCount',
        'adjust_points' => 'getAdjustPoints',
        'foul_points' => 'getFoulPoints',
        'rp' => 'getRp',
        'total_points' => 'getTotalPoints'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['init_line_robot1'] = isset($data['init_line_robot1']) ? $data['init_line_robot1'] : null;
        $this->container['endgame_robot1'] = isset($data['endgame_robot1']) ? $data['endgame_robot1'] : null;
        $this->container['init_line_robot2'] = isset($data['init_line_robot2']) ? $data['init_line_robot2'] : null;
        $this->container['endgame_robot2'] = isset($data['endgame_robot2']) ? $data['endgame_robot2'] : null;
        $this->container['init_line_robot3'] = isset($data['init_line_robot3']) ? $data['init_line_robot3'] : null;
        $this->container['endgame_robot3'] = isset($data['endgame_robot3']) ? $data['endgame_robot3'] : null;
        $this->container['auto_cells_bottom'] = isset($data['auto_cells_bottom']) ? $data['auto_cells_bottom'] : null;
        $this->container['auto_cells_outer'] = isset($data['auto_cells_outer']) ? $data['auto_cells_outer'] : null;
        $this->container['auto_cells_inner'] = isset($data['auto_cells_inner']) ? $data['auto_cells_inner'] : null;
        $this->container['teleop_cells_bottom'] = isset($data['teleop_cells_bottom']) ? $data['teleop_cells_bottom'] : null;
        $this->container['teleop_cells_outer'] = isset($data['teleop_cells_outer']) ? $data['teleop_cells_outer'] : null;
        $this->container['teleop_cells_inner'] = isset($data['teleop_cells_inner']) ? $data['teleop_cells_inner'] : null;
        $this->container['stage1_activated'] = isset($data['stage1_activated']) ? $data['stage1_activated'] : null;
        $this->container['stage2_activated'] = isset($data['stage2_activated']) ? $data['stage2_activated'] : null;
        $this->container['stage3_activated'] = isset($data['stage3_activated']) ? $data['stage3_activated'] : null;
        $this->container['stage3_target_color'] = isset($data['stage3_target_color']) ? $data['stage3_target_color'] : null;
        $this->container['endgame_rung_is_level'] = isset($data['endgame_rung_is_level']) ? $data['endgame_rung_is_level'] : null;
        $this->container['auto_init_line_points'] = isset($data['auto_init_line_points']) ? $data['auto_init_line_points'] : null;
        $this->container['auto_cell_points'] = isset($data['auto_cell_points']) ? $data['auto_cell_points'] : null;
        $this->container['auto_points'] = isset($data['auto_points']) ? $data['auto_points'] : null;
        $this->container['teleop_cell_points'] = isset($data['teleop_cell_points']) ? $data['teleop_cell_points'] : null;
        $this->container['control_panel_points'] = isset($data['control_panel_points']) ? $data['control_panel_points'] : null;
        $this->container['endgame_points'] = isset($data['endgame_points']) ? $data['endgame_points'] : null;
        $this->container['teleop_points'] = isset($data['teleop_points']) ? $data['teleop_points'] : null;
        $this->container['shield_operational_ranking_point'] = isset($data['shield_operational_ranking_point']) ? $data['shield_operational_ranking_point'] : null;
        $this->container['shield_energized_ranking_point'] = isset($data['shield_energized_ranking_point']) ? $data['shield_energized_ranking_point'] : null;
        $this->container['tba_shield_energized_ranking_point_from_foul'] = isset($data['tba_shield_energized_ranking_point_from_foul']) ? $data['tba_shield_energized_ranking_point_from_foul'] : null;
        $this->container['tba_num_robots_hanging'] = isset($data['tba_num_robots_hanging']) ? $data['tba_num_robots_hanging'] : null;
        $this->container['foul_count'] = isset($data['foul_count']) ? $data['foul_count'] : null;
        $this->container['tech_foul_count'] = isset($data['tech_foul_count']) ? $data['tech_foul_count'] : null;
        $this->container['adjust_points'] = isset($data['adjust_points']) ? $data['adjust_points'] : null;
        $this->container['foul_points'] = isset($data['foul_points']) ? $data['foul_points'] : null;
        $this->container['rp'] = isset($data['rp']) ? $data['rp'] : null;
        $this->container['total_points'] = isset($data['total_points']) ? $data['total_points'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets init_line_robot1
     *
     * @return string|null
     */
    public function getInitLineRobot1()
    {
        return $this->container['init_line_robot1'];
    }

    /**
     * Sets init_line_robot1
     *
     * @param string|null $init_line_robot1 init_line_robot1
     *
     * @return $this
     */
    public function setInitLineRobot1($init_line_robot1)
    {
        $this->container['init_line_robot1'] = $init_line_robot1;

        return $this;
    }

    /**
     * Gets endgame_robot1
     *
     * @return string|null
     */
    public function getEndgameRobot1()
    {
        return $this->container['endgame_robot1'];
    }

    /**
     * Sets endgame_robot1
     *
     * @param string|null $endgame_robot1 endgame_robot1
     *
     * @return $this
     */
    public function setEndgameRobot1($endgame_robot1)
    {
        $this->container['endgame_robot1'] = $endgame_robot1;

        return $this;
    }

    /**
     * Gets init_line_robot2
     *
     * @return string|null
     */
    public function getInitLineRobot2()
    {
        return $this->container['init_line_robot2'];
    }

    /**
     * Sets init_line_robot2
     *
     * @param string|null $init_line_robot2 init_line_robot2
     *
     * @return $this
     */
    public function setInitLineRobot2($init_line_robot2)
    {
        $this->container['init_line_robot2'] = $init_line_robot2;

        return $this;
    }

    /**
     * Gets endgame_robot2
     *
     * @return string|null
     */
    public function getEndgameRobot2()
    {
        return $this->container['endgame_robot2'];
    }

    /**
     * Sets endgame_robot2
     *
     * @param string|null $endgame_robot2 endgame_robot2
     *
     * @return $this
     */
    public function setEndgameRobot2($endgame_robot2)
    {
        $this->container['endgame_robot2'] = $endgame_robot2;

        return $this;
    }

    /**
     * Gets init_line_robot3
     *
     * @return string|null
     */
    public function getInitLineRobot3()
    {
        return $this->container['init_line_robot3'];
    }

    /**
     * Sets init_line_robot3
     *
     * @param string|null $init_line_robot3 init_line_robot3
     *
     * @return $this
     */
    public function setInitLineRobot3($init_line_robot3)
    {
        $this->container['init_line_robot3'] = $init_line_robot3;

        return $this;
    }

    /**
     * Gets endgame_robot3
     *
     * @return string|null
     */
    public function getEndgameRobot3()
    {
        return $this->container['endgame_robot3'];
    }

    /**
     * Sets endgame_robot3
     *
     * @param string|null $endgame_robot3 endgame_robot3
     *
     * @return $this
     */
    public function setEndgameRobot3($endgame_robot3)
    {
        $this->container['endgame_robot3'] = $endgame_robot3;

        return $this;
    }

    /**
     * Gets auto_cells_bottom
     *
     * @return int|null
     */
    public function getAutoCellsBottom()
    {
        return $this->container['auto_cells_bottom'];
    }

    /**
     * Sets auto_cells_bottom
     *
     * @param int|null $auto_cells_bottom auto_cells_bottom
     *
     * @return $this
     */
    public function setAutoCellsBottom($auto_cells_bottom)
    {
        $this->container['auto_cells_bottom'] = $auto_cells_bottom;

        return $this;
    }

    /**
     * Gets auto_cells_outer
     *
     * @return int|null
     */
    public function getAutoCellsOuter()
    {
        return $this->container['auto_cells_outer'];
    }

    /**
     * Sets auto_cells_outer
     *
     * @param int|null $auto_cells_outer auto_cells_outer
     *
     * @return $this
     */
    public function setAutoCellsOuter($auto_cells_outer)
    {
        $this->container['auto_cells_outer'] = $auto_cells_outer;

        return $this;
    }

    /**
     * Gets auto_cells_inner
     *
     * @return int|null
     */
    public function getAutoCellsInner()
    {
        return $this->container['auto_cells_inner'];
    }

    /**
     * Sets auto_cells_inner
     *
     * @param int|null $auto_cells_inner auto_cells_inner
     *
     * @return $this
     */
    public function setAutoCellsInner($auto_cells_inner)
    {
        $this->container['auto_cells_inner'] = $auto_cells_inner;

        return $this;
    }

    /**
     * Gets teleop_cells_bottom
     *
     * @return int|null
     */
    public function getTeleopCellsBottom()
    {
        return $this->container['teleop_cells_bottom'];
    }

    /**
     * Sets teleop_cells_bottom
     *
     * @param int|null $teleop_cells_bottom teleop_cells_bottom
     *
     * @return $this
     */
    public function setTeleopCellsBottom($teleop_cells_bottom)
    {
        $this->container['teleop_cells_bottom'] = $teleop_cells_bottom;

        return $this;
    }

    /**
     * Gets teleop_cells_outer
     *
     * @return int|null
     */
    public function getTeleopCellsOuter()
    {
        return $this->container['teleop_cells_outer'];
    }

    /**
     * Sets teleop_cells_outer
     *
     * @param int|null $teleop_cells_outer teleop_cells_outer
     *
     * @return $this
     */
    public function setTeleopCellsOuter($teleop_cells_outer)
    {
        $this->container['teleop_cells_outer'] = $teleop_cells_outer;

        return $this;
    }

    /**
     * Gets teleop_cells_inner
     *
     * @return int|null
     */
    public function getTeleopCellsInner()
    {
        return $this->container['teleop_cells_inner'];
    }

    /**
     * Sets teleop_cells_inner
     *
     * @param int|null $teleop_cells_inner teleop_cells_inner
     *
     * @return $this
     */
    public function setTeleopCellsInner($teleop_cells_inner)
    {
        $this->container['teleop_cells_inner'] = $teleop_cells_inner;

        return $this;
    }

    /**
     * Gets stage1_activated
     *
     * @return bool|null
     */
    public function getStage1Activated()
    {
        return $this->container['stage1_activated'];
    }

    /**
     * Sets stage1_activated
     *
     * @param bool|null $stage1_activated stage1_activated
     *
     * @return $this
     */
    public function setStage1Activated($stage1_activated)
    {
        $this->container['stage1_activated'] = $stage1_activated;

        return $this;
    }

    /**
     * Gets stage2_activated
     *
     * @return bool|null
     */
    public function getStage2Activated()
    {
        return $this->container['stage2_activated'];
    }

    /**
     * Sets stage2_activated
     *
     * @param bool|null $stage2_activated stage2_activated
     *
     * @return $this
     */
    public function setStage2Activated($stage2_activated)
    {
        $this->container['stage2_activated'] = $stage2_activated;

        return $this;
    }

    /**
     * Gets stage3_activated
     *
     * @return bool|null
     */
    public function getStage3Activated()
    {
        return $this->container['stage3_activated'];
    }

    /**
     * Sets stage3_activated
     *
     * @param bool|null $stage3_activated stage3_activated
     *
     * @return $this
     */
    public function setStage3Activated($stage3_activated)
    {
        $this->container['stage3_activated'] = $stage3_activated;

        return $this;
    }

    /**
     * Gets stage3_target_color
     *
     * @return string|null
     */
    public function getStage3TargetColor()
    {
        return $this->container['stage3_target_color'];
    }

    /**
     * Sets stage3_target_color
     *
     * @param string|null $stage3_target_color stage3_target_color
     *
     * @return $this
     */
    public function setStage3TargetColor($stage3_target_color)
    {
        $this->container['stage3_target_color'] = $stage3_target_color;

        return $this;
    }

    /**
     * Gets endgame_rung_is_level
     *
     * @return string|null
     */
    public function getEndgameRungIsLevel()
    {
        return $this->container['endgame_rung_is_level'];
    }

    /**
     * Sets endgame_rung_is_level
     *
     * @param string|null $endgame_rung_is_level endgame_rung_is_level
     *
     * @return $this
     */
    public function setEndgameRungIsLevel($endgame_rung_is_level)
    {
        $this->container['endgame_rung_is_level'] = $endgame_rung_is_level;

        return $this;
    }

    /**
     * Gets auto_init_line_points
     *
     * @return int|null
     */
    public function getAutoInitLinePoints()
    {
        return $this->container['auto_init_line_points'];
    }

    /**
     * Sets auto_init_line_points
     *
     * @param int|null $auto_init_line_points auto_init_line_points
     *
     * @return $this
     */
    public function setAutoInitLinePoints($auto_init_line_points)
    {
        $this->container['auto_init_line_points'] = $auto_init_line_points;

        return $this;
    }

    /**
     * Gets auto_cell_points
     *
     * @return int|null
     */
    public function getAutoCellPoints()
    {
        return $this->container['auto_cell_points'];
    }

    /**
     * Sets auto_cell_points
     *
     * @param int|null $auto_cell_points auto_cell_points
     *
     * @return $this
     */
    public function setAutoCellPoints($auto_cell_points)
    {
        $this->container['auto_cell_points'] = $auto_cell_points;

        return $this;
    }

    /**
     * Gets auto_points
     *
     * @return int|null
     */
    public function getAutoPoints()
    {
        return $this->container['auto_points'];
    }

    /**
     * Sets auto_points
     *
     * @param int|null $auto_points auto_points
     *
     * @return $this
     */
    public function setAutoPoints($auto_points)
    {
        $this->container['auto_points'] = $auto_points;

        return $this;
    }

    /**
     * Gets teleop_cell_points
     *
     * @return int|null
     */
    public function getTeleopCellPoints()
    {
        return $this->container['teleop_cell_points'];
    }

    /**
     * Sets teleop_cell_points
     *
     * @param int|null $teleop_cell_points teleop_cell_points
     *
     * @return $this
     */
    public function setTeleopCellPoints($teleop_cell_points)
    {
        $this->container['teleop_cell_points'] = $teleop_cell_points;

        return $this;
    }

    /**
     * Gets control_panel_points
     *
     * @return int|null
     */
    public function getControlPanelPoints()
    {
        return $this->container['control_panel_points'];
    }

    /**
     * Sets control_panel_points
     *
     * @param int|null $control_panel_points control_panel_points
     *
     * @return $this
     */
    public function setControlPanelPoints($control_panel_points)
    {
        $this->container['control_panel_points'] = $control_panel_points;

        return $this;
    }

    /**
     * Gets endgame_points
     *
     * @return int|null
     */
    public function getEndgamePoints()
    {
        return $this->container['endgame_points'];
    }

    /**
     * Sets endgame_points
     *
     * @param int|null $endgame_points endgame_points
     *
     * @return $this
     */
    public function setEndgamePoints($endgame_points)
    {
        $this->container['endgame_points'] = $endgame_points;

        return $this;
    }

    /**
     * Gets teleop_points
     *
     * @return int|null
     */
    public function getTeleopPoints()
    {
        return $this->container['teleop_points'];
    }

    /**
     * Sets teleop_points
     *
     * @param int|null $teleop_points teleop_points
     *
     * @return $this
     */
    public function setTeleopPoints($teleop_points)
    {
        $this->container['teleop_points'] = $teleop_points;

        return $this;
    }

    /**
     * Gets shield_operational_ranking_point
     *
     * @return bool|null
     */
    public function getShieldOperationalRankingPoint()
    {
        return $this->container['shield_operational_ranking_point'];
    }

    /**
     * Sets shield_operational_ranking_point
     *
     * @param bool|null $shield_operational_ranking_point shield_operational_ranking_point
     *
     * @return $this
     */
    public function setShieldOperationalRankingPoint($shield_operational_ranking_point)
    {
        $this->container['shield_operational_ranking_point'] = $shield_operational_ranking_point;

        return $this;
    }

    /**
     * Gets shield_energized_ranking_point
     *
     * @return bool|null
     */
    public function getShieldEnergizedRankingPoint()
    {
        return $this->container['shield_energized_ranking_point'];
    }

    /**
     * Sets shield_energized_ranking_point
     *
     * @param bool|null $shield_energized_ranking_point shield_energized_ranking_point
     *
     * @return $this
     */
    public function setShieldEnergizedRankingPoint($shield_energized_ranking_point)
    {
        $this->container['shield_energized_ranking_point'] = $shield_energized_ranking_point;

        return $this;
    }

    /**
     * Gets tba_shield_energized_ranking_point_from_foul
     *
     * @return bool|null
     */
    public function getTbaShieldEnergizedRankingPointFromFoul()
    {
        return $this->container['tba_shield_energized_ranking_point_from_foul'];
    }

    /**
     * Sets tba_shield_energized_ranking_point_from_foul
     *
     * @param bool|null $tba_shield_energized_ranking_point_from_foul Unofficial TBA-computed value that indicates whether the shieldEnergizedRankingPoint was earned normally or awarded due to a foul.
     *
     * @return $this
     */
    public function setTbaShieldEnergizedRankingPointFromFoul($tba_shield_energized_ranking_point_from_foul)
    {
        $this->container['tba_shield_energized_ranking_point_from_foul'] = $tba_shield_energized_ranking_point_from_foul;

        return $this;
    }

    /**
     * Gets tba_num_robots_hanging
     *
     * @return int|null
     */
    public function getTbaNumRobotsHanging()
    {
        return $this->container['tba_num_robots_hanging'];
    }

    /**
     * Sets tba_num_robots_hanging
     *
     * @param int|null $tba_num_robots_hanging Unofficial TBA-computed value that counts the number of robots who were hanging at the end of the match.
     *
     * @return $this
     */
    public function setTbaNumRobotsHanging($tba_num_robots_hanging)
    {
        $this->container['tba_num_robots_hanging'] = $tba_num_robots_hanging;

        return $this;
    }

    /**
     * Gets foul_count
     *
     * @return int|null
     */
    public function getFoulCount()
    {
        return $this->container['foul_count'];
    }

    /**
     * Sets foul_count
     *
     * @param int|null $foul_count foul_count
     *
     * @return $this
     */
    public function setFoulCount($foul_count)
    {
        $this->container['foul_count'] = $foul_count;

        return $this;
    }

    /**
     * Gets tech_foul_count
     *
     * @return int|null
     */
    public function getTechFoulCount()
    {
        return $this->container['tech_foul_count'];
    }

    /**
     * Sets tech_foul_count
     *
     * @param int|null $tech_foul_count tech_foul_count
     *
     * @return $this
     */
    public function setTechFoulCount($tech_foul_count)
    {
        $this->container['tech_foul_count'] = $tech_foul_count;

        return $this;
    }

    /**
     * Gets adjust_points
     *
     * @return int|null
     */
    public function getAdjustPoints()
    {
        return $this->container['adjust_points'];
    }

    /**
     * Sets adjust_points
     *
     * @param int|null $adjust_points adjust_points
     *
     * @return $this
     */
    public function setAdjustPoints($adjust_points)
    {
        $this->container['adjust_points'] = $adjust_points;

        return $this;
    }

    /**
     * Gets foul_points
     *
     * @return int|null
     */
    public function getFoulPoints()
    {
        return $this->container['foul_points'];
    }

    /**
     * Sets foul_points
     *
     * @param int|null $foul_points foul_points
     *
     * @return $this
     */
    public function setFoulPoints($foul_points)
    {
        $this->container['foul_points'] = $foul_points;

        return $this;
    }

    /**
     * Gets rp
     *
     * @return int|null
     */
    public function getRp()
    {
        return $this->container['rp'];
    }

    /**
     * Sets rp
     *
     * @param int|null $rp rp
     *
     * @return $this
     */
    public function setRp($rp)
    {
        $this->container['rp'] = $rp;

        return $this;
    }

    /**
     * Gets total_points
     *
     * @return int|null
     */
    public function getTotalPoints()
    {
        return $this->container['total_points'];
    }

    /**
     * Sets total_points
     *
     * @param int|null $total_points total_points
     *
     * @return $this
     */
    public function setTotalPoints($total_points)
    {
        $this->container['total_points'] = $total_points;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


