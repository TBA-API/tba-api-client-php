<?php
/**
 * MatchScoreBreakdown2019Alliance
 *
 * PHP version 5
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace TBA-API\v3client\TBA-API\v3client\model;

use \ArrayAccess;
use \TBA-API\v3client\ObjectSerializer;

/**
 * MatchScoreBreakdown2019Alliance Class Doc Comment
 *
 * @category Class
 * @package  TBA-API\v3client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MatchScoreBreakdown2019Alliance implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Match_Score_Breakdown_2019_Alliance';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'adjust_points' => 'int',
        'auto_points' => 'int',
        'bay1' => 'string',
        'bay2' => 'string',
        'bay3' => 'string',
        'bay4' => 'string',
        'bay5' => 'string',
        'bay6' => 'string',
        'bay7' => 'string',
        'bay8' => 'string',
        'cargo_points' => 'int',
        'complete_rocket_ranking_point' => 'bool',
        'completed_rocket_far' => 'bool',
        'completed_rocket_near' => 'bool',
        'endgame_robot1' => 'string',
        'endgame_robot2' => 'string',
        'endgame_robot3' => 'string',
        'foul_count' => 'int',
        'foul_points' => 'int',
        'hab_climb_points' => 'int',
        'hab_docking_ranking_point' => 'bool',
        'hab_line_robot1' => 'string',
        'hab_line_robot2' => 'string',
        'hab_line_robot3' => 'string',
        'hatch_panel_points' => 'int',
        'low_left_rocket_far' => 'string',
        'low_left_rocket_near' => 'string',
        'low_right_rocket_far' => 'string',
        'low_right_rocket_near' => 'string',
        'mid_left_rocket_far' => 'string',
        'mid_left_rocket_near' => 'string',
        'mid_right_rocket_far' => 'string',
        'mid_right_rocket_near' => 'string',
        'pre_match_bay1' => 'string',
        'pre_match_bay2' => 'string',
        'pre_match_bay3' => 'string',
        'pre_match_bay6' => 'string',
        'pre_match_bay7' => 'string',
        'pre_match_bay8' => 'string',
        'pre_match_level_robot1' => 'string',
        'pre_match_level_robot2' => 'string',
        'pre_match_level_robot3' => 'string',
        'rp' => 'int',
        'sand_storm_bonus_points' => 'int',
        'tech_foul_count' => 'int',
        'teleop_points' => 'int',
        'top_left_rocket_far' => 'string',
        'top_left_rocket_near' => 'string',
        'top_right_rocket_far' => 'string',
        'top_right_rocket_near' => 'string',
        'total_points' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'adjust_points' => null,
        'auto_points' => null,
        'bay1' => null,
        'bay2' => null,
        'bay3' => null,
        'bay4' => null,
        'bay5' => null,
        'bay6' => null,
        'bay7' => null,
        'bay8' => null,
        'cargo_points' => null,
        'complete_rocket_ranking_point' => null,
        'completed_rocket_far' => null,
        'completed_rocket_near' => null,
        'endgame_robot1' => null,
        'endgame_robot2' => null,
        'endgame_robot3' => null,
        'foul_count' => null,
        'foul_points' => null,
        'hab_climb_points' => null,
        'hab_docking_ranking_point' => null,
        'hab_line_robot1' => null,
        'hab_line_robot2' => null,
        'hab_line_robot3' => null,
        'hatch_panel_points' => null,
        'low_left_rocket_far' => null,
        'low_left_rocket_near' => null,
        'low_right_rocket_far' => null,
        'low_right_rocket_near' => null,
        'mid_left_rocket_far' => null,
        'mid_left_rocket_near' => null,
        'mid_right_rocket_far' => null,
        'mid_right_rocket_near' => null,
        'pre_match_bay1' => null,
        'pre_match_bay2' => null,
        'pre_match_bay3' => null,
        'pre_match_bay6' => null,
        'pre_match_bay7' => null,
        'pre_match_bay8' => null,
        'pre_match_level_robot1' => null,
        'pre_match_level_robot2' => null,
        'pre_match_level_robot3' => null,
        'rp' => null,
        'sand_storm_bonus_points' => null,
        'tech_foul_count' => null,
        'teleop_points' => null,
        'top_left_rocket_far' => null,
        'top_left_rocket_near' => null,
        'top_right_rocket_far' => null,
        'top_right_rocket_near' => null,
        'total_points' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'adjust_points' => 'adjustPoints',
        'auto_points' => 'autoPoints',
        'bay1' => 'bay1',
        'bay2' => 'bay2',
        'bay3' => 'bay3',
        'bay4' => 'bay4',
        'bay5' => 'bay5',
        'bay6' => 'bay6',
        'bay7' => 'bay7',
        'bay8' => 'bay8',
        'cargo_points' => 'cargoPoints',
        'complete_rocket_ranking_point' => 'completeRocketRankingPoint',
        'completed_rocket_far' => 'completedRocketFar',
        'completed_rocket_near' => 'completedRocketNear',
        'endgame_robot1' => 'endgameRobot1',
        'endgame_robot2' => 'endgameRobot2',
        'endgame_robot3' => 'endgameRobot3',
        'foul_count' => 'foulCount',
        'foul_points' => 'foulPoints',
        'hab_climb_points' => 'habClimbPoints',
        'hab_docking_ranking_point' => 'habDockingRankingPoint',
        'hab_line_robot1' => 'habLineRobot1',
        'hab_line_robot2' => 'habLineRobot2',
        'hab_line_robot3' => 'habLineRobot3',
        'hatch_panel_points' => 'hatchPanelPoints',
        'low_left_rocket_far' => 'lowLeftRocketFar',
        'low_left_rocket_near' => 'lowLeftRocketNear',
        'low_right_rocket_far' => 'lowRightRocketFar',
        'low_right_rocket_near' => 'lowRightRocketNear',
        'mid_left_rocket_far' => 'midLeftRocketFar',
        'mid_left_rocket_near' => 'midLeftRocketNear',
        'mid_right_rocket_far' => 'midRightRocketFar',
        'mid_right_rocket_near' => 'midRightRocketNear',
        'pre_match_bay1' => 'preMatchBay1',
        'pre_match_bay2' => 'preMatchBay2',
        'pre_match_bay3' => 'preMatchBay3',
        'pre_match_bay6' => 'preMatchBay6',
        'pre_match_bay7' => 'preMatchBay7',
        'pre_match_bay8' => 'preMatchBay8',
        'pre_match_level_robot1' => 'preMatchLevelRobot1',
        'pre_match_level_robot2' => 'preMatchLevelRobot2',
        'pre_match_level_robot3' => 'preMatchLevelRobot3',
        'rp' => 'rp',
        'sand_storm_bonus_points' => 'sandStormBonusPoints',
        'tech_foul_count' => 'techFoulCount',
        'teleop_points' => 'teleopPoints',
        'top_left_rocket_far' => 'topLeftRocketFar',
        'top_left_rocket_near' => 'topLeftRocketNear',
        'top_right_rocket_far' => 'topRightRocketFar',
        'top_right_rocket_near' => 'topRightRocketNear',
        'total_points' => 'totalPoints'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'adjust_points' => 'setAdjustPoints',
        'auto_points' => 'setAutoPoints',
        'bay1' => 'setBay1',
        'bay2' => 'setBay2',
        'bay3' => 'setBay3',
        'bay4' => 'setBay4',
        'bay5' => 'setBay5',
        'bay6' => 'setBay6',
        'bay7' => 'setBay7',
        'bay8' => 'setBay8',
        'cargo_points' => 'setCargoPoints',
        'complete_rocket_ranking_point' => 'setCompleteRocketRankingPoint',
        'completed_rocket_far' => 'setCompletedRocketFar',
        'completed_rocket_near' => 'setCompletedRocketNear',
        'endgame_robot1' => 'setEndgameRobot1',
        'endgame_robot2' => 'setEndgameRobot2',
        'endgame_robot3' => 'setEndgameRobot3',
        'foul_count' => 'setFoulCount',
        'foul_points' => 'setFoulPoints',
        'hab_climb_points' => 'setHabClimbPoints',
        'hab_docking_ranking_point' => 'setHabDockingRankingPoint',
        'hab_line_robot1' => 'setHabLineRobot1',
        'hab_line_robot2' => 'setHabLineRobot2',
        'hab_line_robot3' => 'setHabLineRobot3',
        'hatch_panel_points' => 'setHatchPanelPoints',
        'low_left_rocket_far' => 'setLowLeftRocketFar',
        'low_left_rocket_near' => 'setLowLeftRocketNear',
        'low_right_rocket_far' => 'setLowRightRocketFar',
        'low_right_rocket_near' => 'setLowRightRocketNear',
        'mid_left_rocket_far' => 'setMidLeftRocketFar',
        'mid_left_rocket_near' => 'setMidLeftRocketNear',
        'mid_right_rocket_far' => 'setMidRightRocketFar',
        'mid_right_rocket_near' => 'setMidRightRocketNear',
        'pre_match_bay1' => 'setPreMatchBay1',
        'pre_match_bay2' => 'setPreMatchBay2',
        'pre_match_bay3' => 'setPreMatchBay3',
        'pre_match_bay6' => 'setPreMatchBay6',
        'pre_match_bay7' => 'setPreMatchBay7',
        'pre_match_bay8' => 'setPreMatchBay8',
        'pre_match_level_robot1' => 'setPreMatchLevelRobot1',
        'pre_match_level_robot2' => 'setPreMatchLevelRobot2',
        'pre_match_level_robot3' => 'setPreMatchLevelRobot3',
        'rp' => 'setRp',
        'sand_storm_bonus_points' => 'setSandStormBonusPoints',
        'tech_foul_count' => 'setTechFoulCount',
        'teleop_points' => 'setTeleopPoints',
        'top_left_rocket_far' => 'setTopLeftRocketFar',
        'top_left_rocket_near' => 'setTopLeftRocketNear',
        'top_right_rocket_far' => 'setTopRightRocketFar',
        'top_right_rocket_near' => 'setTopRightRocketNear',
        'total_points' => 'setTotalPoints'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'adjust_points' => 'getAdjustPoints',
        'auto_points' => 'getAutoPoints',
        'bay1' => 'getBay1',
        'bay2' => 'getBay2',
        'bay3' => 'getBay3',
        'bay4' => 'getBay4',
        'bay5' => 'getBay5',
        'bay6' => 'getBay6',
        'bay7' => 'getBay7',
        'bay8' => 'getBay8',
        'cargo_points' => 'getCargoPoints',
        'complete_rocket_ranking_point' => 'getCompleteRocketRankingPoint',
        'completed_rocket_far' => 'getCompletedRocketFar',
        'completed_rocket_near' => 'getCompletedRocketNear',
        'endgame_robot1' => 'getEndgameRobot1',
        'endgame_robot2' => 'getEndgameRobot2',
        'endgame_robot3' => 'getEndgameRobot3',
        'foul_count' => 'getFoulCount',
        'foul_points' => 'getFoulPoints',
        'hab_climb_points' => 'getHabClimbPoints',
        'hab_docking_ranking_point' => 'getHabDockingRankingPoint',
        'hab_line_robot1' => 'getHabLineRobot1',
        'hab_line_robot2' => 'getHabLineRobot2',
        'hab_line_robot3' => 'getHabLineRobot3',
        'hatch_panel_points' => 'getHatchPanelPoints',
        'low_left_rocket_far' => 'getLowLeftRocketFar',
        'low_left_rocket_near' => 'getLowLeftRocketNear',
        'low_right_rocket_far' => 'getLowRightRocketFar',
        'low_right_rocket_near' => 'getLowRightRocketNear',
        'mid_left_rocket_far' => 'getMidLeftRocketFar',
        'mid_left_rocket_near' => 'getMidLeftRocketNear',
        'mid_right_rocket_far' => 'getMidRightRocketFar',
        'mid_right_rocket_near' => 'getMidRightRocketNear',
        'pre_match_bay1' => 'getPreMatchBay1',
        'pre_match_bay2' => 'getPreMatchBay2',
        'pre_match_bay3' => 'getPreMatchBay3',
        'pre_match_bay6' => 'getPreMatchBay6',
        'pre_match_bay7' => 'getPreMatchBay7',
        'pre_match_bay8' => 'getPreMatchBay8',
        'pre_match_level_robot1' => 'getPreMatchLevelRobot1',
        'pre_match_level_robot2' => 'getPreMatchLevelRobot2',
        'pre_match_level_robot3' => 'getPreMatchLevelRobot3',
        'rp' => 'getRp',
        'sand_storm_bonus_points' => 'getSandStormBonusPoints',
        'tech_foul_count' => 'getTechFoulCount',
        'teleop_points' => 'getTeleopPoints',
        'top_left_rocket_far' => 'getTopLeftRocketFar',
        'top_left_rocket_near' => 'getTopLeftRocketNear',
        'top_right_rocket_far' => 'getTopRightRocketFar',
        'top_right_rocket_near' => 'getTopRightRocketNear',
        'total_points' => 'getTotalPoints'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['adjust_points'] = isset($data['adjust_points']) ? $data['adjust_points'] : null;
        $this->container['auto_points'] = isset($data['auto_points']) ? $data['auto_points'] : null;
        $this->container['bay1'] = isset($data['bay1']) ? $data['bay1'] : null;
        $this->container['bay2'] = isset($data['bay2']) ? $data['bay2'] : null;
        $this->container['bay3'] = isset($data['bay3']) ? $data['bay3'] : null;
        $this->container['bay4'] = isset($data['bay4']) ? $data['bay4'] : null;
        $this->container['bay5'] = isset($data['bay5']) ? $data['bay5'] : null;
        $this->container['bay6'] = isset($data['bay6']) ? $data['bay6'] : null;
        $this->container['bay7'] = isset($data['bay7']) ? $data['bay7'] : null;
        $this->container['bay8'] = isset($data['bay8']) ? $data['bay8'] : null;
        $this->container['cargo_points'] = isset($data['cargo_points']) ? $data['cargo_points'] : null;
        $this->container['complete_rocket_ranking_point'] = isset($data['complete_rocket_ranking_point']) ? $data['complete_rocket_ranking_point'] : null;
        $this->container['completed_rocket_far'] = isset($data['completed_rocket_far']) ? $data['completed_rocket_far'] : null;
        $this->container['completed_rocket_near'] = isset($data['completed_rocket_near']) ? $data['completed_rocket_near'] : null;
        $this->container['endgame_robot1'] = isset($data['endgame_robot1']) ? $data['endgame_robot1'] : null;
        $this->container['endgame_robot2'] = isset($data['endgame_robot2']) ? $data['endgame_robot2'] : null;
        $this->container['endgame_robot3'] = isset($data['endgame_robot3']) ? $data['endgame_robot3'] : null;
        $this->container['foul_count'] = isset($data['foul_count']) ? $data['foul_count'] : null;
        $this->container['foul_points'] = isset($data['foul_points']) ? $data['foul_points'] : null;
        $this->container['hab_climb_points'] = isset($data['hab_climb_points']) ? $data['hab_climb_points'] : null;
        $this->container['hab_docking_ranking_point'] = isset($data['hab_docking_ranking_point']) ? $data['hab_docking_ranking_point'] : null;
        $this->container['hab_line_robot1'] = isset($data['hab_line_robot1']) ? $data['hab_line_robot1'] : null;
        $this->container['hab_line_robot2'] = isset($data['hab_line_robot2']) ? $data['hab_line_robot2'] : null;
        $this->container['hab_line_robot3'] = isset($data['hab_line_robot3']) ? $data['hab_line_robot3'] : null;
        $this->container['hatch_panel_points'] = isset($data['hatch_panel_points']) ? $data['hatch_panel_points'] : null;
        $this->container['low_left_rocket_far'] = isset($data['low_left_rocket_far']) ? $data['low_left_rocket_far'] : null;
        $this->container['low_left_rocket_near'] = isset($data['low_left_rocket_near']) ? $data['low_left_rocket_near'] : null;
        $this->container['low_right_rocket_far'] = isset($data['low_right_rocket_far']) ? $data['low_right_rocket_far'] : null;
        $this->container['low_right_rocket_near'] = isset($data['low_right_rocket_near']) ? $data['low_right_rocket_near'] : null;
        $this->container['mid_left_rocket_far'] = isset($data['mid_left_rocket_far']) ? $data['mid_left_rocket_far'] : null;
        $this->container['mid_left_rocket_near'] = isset($data['mid_left_rocket_near']) ? $data['mid_left_rocket_near'] : null;
        $this->container['mid_right_rocket_far'] = isset($data['mid_right_rocket_far']) ? $data['mid_right_rocket_far'] : null;
        $this->container['mid_right_rocket_near'] = isset($data['mid_right_rocket_near']) ? $data['mid_right_rocket_near'] : null;
        $this->container['pre_match_bay1'] = isset($data['pre_match_bay1']) ? $data['pre_match_bay1'] : null;
        $this->container['pre_match_bay2'] = isset($data['pre_match_bay2']) ? $data['pre_match_bay2'] : null;
        $this->container['pre_match_bay3'] = isset($data['pre_match_bay3']) ? $data['pre_match_bay3'] : null;
        $this->container['pre_match_bay6'] = isset($data['pre_match_bay6']) ? $data['pre_match_bay6'] : null;
        $this->container['pre_match_bay7'] = isset($data['pre_match_bay7']) ? $data['pre_match_bay7'] : null;
        $this->container['pre_match_bay8'] = isset($data['pre_match_bay8']) ? $data['pre_match_bay8'] : null;
        $this->container['pre_match_level_robot1'] = isset($data['pre_match_level_robot1']) ? $data['pre_match_level_robot1'] : null;
        $this->container['pre_match_level_robot2'] = isset($data['pre_match_level_robot2']) ? $data['pre_match_level_robot2'] : null;
        $this->container['pre_match_level_robot3'] = isset($data['pre_match_level_robot3']) ? $data['pre_match_level_robot3'] : null;
        $this->container['rp'] = isset($data['rp']) ? $data['rp'] : null;
        $this->container['sand_storm_bonus_points'] = isset($data['sand_storm_bonus_points']) ? $data['sand_storm_bonus_points'] : null;
        $this->container['tech_foul_count'] = isset($data['tech_foul_count']) ? $data['tech_foul_count'] : null;
        $this->container['teleop_points'] = isset($data['teleop_points']) ? $data['teleop_points'] : null;
        $this->container['top_left_rocket_far'] = isset($data['top_left_rocket_far']) ? $data['top_left_rocket_far'] : null;
        $this->container['top_left_rocket_near'] = isset($data['top_left_rocket_near']) ? $data['top_left_rocket_near'] : null;
        $this->container['top_right_rocket_far'] = isset($data['top_right_rocket_far']) ? $data['top_right_rocket_far'] : null;
        $this->container['top_right_rocket_near'] = isset($data['top_right_rocket_near']) ? $data['top_right_rocket_near'] : null;
        $this->container['total_points'] = isset($data['total_points']) ? $data['total_points'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets adjust_points
     *
     * @return int|null
     */
    public function getAdjustPoints()
    {
        return $this->container['adjust_points'];
    }

    /**
     * Sets adjust_points
     *
     * @param int|null $adjust_points adjust_points
     *
     * @return $this
     */
    public function setAdjustPoints($adjust_points)
    {
        $this->container['adjust_points'] = $adjust_points;

        return $this;
    }

    /**
     * Gets auto_points
     *
     * @return int|null
     */
    public function getAutoPoints()
    {
        return $this->container['auto_points'];
    }

    /**
     * Sets auto_points
     *
     * @param int|null $auto_points auto_points
     *
     * @return $this
     */
    public function setAutoPoints($auto_points)
    {
        $this->container['auto_points'] = $auto_points;

        return $this;
    }

    /**
     * Gets bay1
     *
     * @return string|null
     */
    public function getBay1()
    {
        return $this->container['bay1'];
    }

    /**
     * Sets bay1
     *
     * @param string|null $bay1 bay1
     *
     * @return $this
     */
    public function setBay1($bay1)
    {
        $this->container['bay1'] = $bay1;

        return $this;
    }

    /**
     * Gets bay2
     *
     * @return string|null
     */
    public function getBay2()
    {
        return $this->container['bay2'];
    }

    /**
     * Sets bay2
     *
     * @param string|null $bay2 bay2
     *
     * @return $this
     */
    public function setBay2($bay2)
    {
        $this->container['bay2'] = $bay2;

        return $this;
    }

    /**
     * Gets bay3
     *
     * @return string|null
     */
    public function getBay3()
    {
        return $this->container['bay3'];
    }

    /**
     * Sets bay3
     *
     * @param string|null $bay3 bay3
     *
     * @return $this
     */
    public function setBay3($bay3)
    {
        $this->container['bay3'] = $bay3;

        return $this;
    }

    /**
     * Gets bay4
     *
     * @return string|null
     */
    public function getBay4()
    {
        return $this->container['bay4'];
    }

    /**
     * Sets bay4
     *
     * @param string|null $bay4 bay4
     *
     * @return $this
     */
    public function setBay4($bay4)
    {
        $this->container['bay4'] = $bay4;

        return $this;
    }

    /**
     * Gets bay5
     *
     * @return string|null
     */
    public function getBay5()
    {
        return $this->container['bay5'];
    }

    /**
     * Sets bay5
     *
     * @param string|null $bay5 bay5
     *
     * @return $this
     */
    public function setBay5($bay5)
    {
        $this->container['bay5'] = $bay5;

        return $this;
    }

    /**
     * Gets bay6
     *
     * @return string|null
     */
    public function getBay6()
    {
        return $this->container['bay6'];
    }

    /**
     * Sets bay6
     *
     * @param string|null $bay6 bay6
     *
     * @return $this
     */
    public function setBay6($bay6)
    {
        $this->container['bay6'] = $bay6;

        return $this;
    }

    /**
     * Gets bay7
     *
     * @return string|null
     */
    public function getBay7()
    {
        return $this->container['bay7'];
    }

    /**
     * Sets bay7
     *
     * @param string|null $bay7 bay7
     *
     * @return $this
     */
    public function setBay7($bay7)
    {
        $this->container['bay7'] = $bay7;

        return $this;
    }

    /**
     * Gets bay8
     *
     * @return string|null
     */
    public function getBay8()
    {
        return $this->container['bay8'];
    }

    /**
     * Sets bay8
     *
     * @param string|null $bay8 bay8
     *
     * @return $this
     */
    public function setBay8($bay8)
    {
        $this->container['bay8'] = $bay8;

        return $this;
    }

    /**
     * Gets cargo_points
     *
     * @return int|null
     */
    public function getCargoPoints()
    {
        return $this->container['cargo_points'];
    }

    /**
     * Sets cargo_points
     *
     * @param int|null $cargo_points cargo_points
     *
     * @return $this
     */
    public function setCargoPoints($cargo_points)
    {
        $this->container['cargo_points'] = $cargo_points;

        return $this;
    }

    /**
     * Gets complete_rocket_ranking_point
     *
     * @return bool|null
     */
    public function getCompleteRocketRankingPoint()
    {
        return $this->container['complete_rocket_ranking_point'];
    }

    /**
     * Sets complete_rocket_ranking_point
     *
     * @param bool|null $complete_rocket_ranking_point complete_rocket_ranking_point
     *
     * @return $this
     */
    public function setCompleteRocketRankingPoint($complete_rocket_ranking_point)
    {
        $this->container['complete_rocket_ranking_point'] = $complete_rocket_ranking_point;

        return $this;
    }

    /**
     * Gets completed_rocket_far
     *
     * @return bool|null
     */
    public function getCompletedRocketFar()
    {
        return $this->container['completed_rocket_far'];
    }

    /**
     * Sets completed_rocket_far
     *
     * @param bool|null $completed_rocket_far completed_rocket_far
     *
     * @return $this
     */
    public function setCompletedRocketFar($completed_rocket_far)
    {
        $this->container['completed_rocket_far'] = $completed_rocket_far;

        return $this;
    }

    /**
     * Gets completed_rocket_near
     *
     * @return bool|null
     */
    public function getCompletedRocketNear()
    {
        return $this->container['completed_rocket_near'];
    }

    /**
     * Sets completed_rocket_near
     *
     * @param bool|null $completed_rocket_near completed_rocket_near
     *
     * @return $this
     */
    public function setCompletedRocketNear($completed_rocket_near)
    {
        $this->container['completed_rocket_near'] = $completed_rocket_near;

        return $this;
    }

    /**
     * Gets endgame_robot1
     *
     * @return string|null
     */
    public function getEndgameRobot1()
    {
        return $this->container['endgame_robot1'];
    }

    /**
     * Sets endgame_robot1
     *
     * @param string|null $endgame_robot1 endgame_robot1
     *
     * @return $this
     */
    public function setEndgameRobot1($endgame_robot1)
    {
        $this->container['endgame_robot1'] = $endgame_robot1;

        return $this;
    }

    /**
     * Gets endgame_robot2
     *
     * @return string|null
     */
    public function getEndgameRobot2()
    {
        return $this->container['endgame_robot2'];
    }

    /**
     * Sets endgame_robot2
     *
     * @param string|null $endgame_robot2 endgame_robot2
     *
     * @return $this
     */
    public function setEndgameRobot2($endgame_robot2)
    {
        $this->container['endgame_robot2'] = $endgame_robot2;

        return $this;
    }

    /**
     * Gets endgame_robot3
     *
     * @return string|null
     */
    public function getEndgameRobot3()
    {
        return $this->container['endgame_robot3'];
    }

    /**
     * Sets endgame_robot3
     *
     * @param string|null $endgame_robot3 endgame_robot3
     *
     * @return $this
     */
    public function setEndgameRobot3($endgame_robot3)
    {
        $this->container['endgame_robot3'] = $endgame_robot3;

        return $this;
    }

    /**
     * Gets foul_count
     *
     * @return int|null
     */
    public function getFoulCount()
    {
        return $this->container['foul_count'];
    }

    /**
     * Sets foul_count
     *
     * @param int|null $foul_count foul_count
     *
     * @return $this
     */
    public function setFoulCount($foul_count)
    {
        $this->container['foul_count'] = $foul_count;

        return $this;
    }

    /**
     * Gets foul_points
     *
     * @return int|null
     */
    public function getFoulPoints()
    {
        return $this->container['foul_points'];
    }

    /**
     * Sets foul_points
     *
     * @param int|null $foul_points foul_points
     *
     * @return $this
     */
    public function setFoulPoints($foul_points)
    {
        $this->container['foul_points'] = $foul_points;

        return $this;
    }

    /**
     * Gets hab_climb_points
     *
     * @return int|null
     */
    public function getHabClimbPoints()
    {
        return $this->container['hab_climb_points'];
    }

    /**
     * Sets hab_climb_points
     *
     * @param int|null $hab_climb_points hab_climb_points
     *
     * @return $this
     */
    public function setHabClimbPoints($hab_climb_points)
    {
        $this->container['hab_climb_points'] = $hab_climb_points;

        return $this;
    }

    /**
     * Gets hab_docking_ranking_point
     *
     * @return bool|null
     */
    public function getHabDockingRankingPoint()
    {
        return $this->container['hab_docking_ranking_point'];
    }

    /**
     * Sets hab_docking_ranking_point
     *
     * @param bool|null $hab_docking_ranking_point hab_docking_ranking_point
     *
     * @return $this
     */
    public function setHabDockingRankingPoint($hab_docking_ranking_point)
    {
        $this->container['hab_docking_ranking_point'] = $hab_docking_ranking_point;

        return $this;
    }

    /**
     * Gets hab_line_robot1
     *
     * @return string|null
     */
    public function getHabLineRobot1()
    {
        return $this->container['hab_line_robot1'];
    }

    /**
     * Sets hab_line_robot1
     *
     * @param string|null $hab_line_robot1 hab_line_robot1
     *
     * @return $this
     */
    public function setHabLineRobot1($hab_line_robot1)
    {
        $this->container['hab_line_robot1'] = $hab_line_robot1;

        return $this;
    }

    /**
     * Gets hab_line_robot2
     *
     * @return string|null
     */
    public function getHabLineRobot2()
    {
        return $this->container['hab_line_robot2'];
    }

    /**
     * Sets hab_line_robot2
     *
     * @param string|null $hab_line_robot2 hab_line_robot2
     *
     * @return $this
     */
    public function setHabLineRobot2($hab_line_robot2)
    {
        $this->container['hab_line_robot2'] = $hab_line_robot2;

        return $this;
    }

    /**
     * Gets hab_line_robot3
     *
     * @return string|null
     */
    public function getHabLineRobot3()
    {
        return $this->container['hab_line_robot3'];
    }

    /**
     * Sets hab_line_robot3
     *
     * @param string|null $hab_line_robot3 hab_line_robot3
     *
     * @return $this
     */
    public function setHabLineRobot3($hab_line_robot3)
    {
        $this->container['hab_line_robot3'] = $hab_line_robot3;

        return $this;
    }

    /**
     * Gets hatch_panel_points
     *
     * @return int|null
     */
    public function getHatchPanelPoints()
    {
        return $this->container['hatch_panel_points'];
    }

    /**
     * Sets hatch_panel_points
     *
     * @param int|null $hatch_panel_points hatch_panel_points
     *
     * @return $this
     */
    public function setHatchPanelPoints($hatch_panel_points)
    {
        $this->container['hatch_panel_points'] = $hatch_panel_points;

        return $this;
    }

    /**
     * Gets low_left_rocket_far
     *
     * @return string|null
     */
    public function getLowLeftRocketFar()
    {
        return $this->container['low_left_rocket_far'];
    }

    /**
     * Sets low_left_rocket_far
     *
     * @param string|null $low_left_rocket_far low_left_rocket_far
     *
     * @return $this
     */
    public function setLowLeftRocketFar($low_left_rocket_far)
    {
        $this->container['low_left_rocket_far'] = $low_left_rocket_far;

        return $this;
    }

    /**
     * Gets low_left_rocket_near
     *
     * @return string|null
     */
    public function getLowLeftRocketNear()
    {
        return $this->container['low_left_rocket_near'];
    }

    /**
     * Sets low_left_rocket_near
     *
     * @param string|null $low_left_rocket_near low_left_rocket_near
     *
     * @return $this
     */
    public function setLowLeftRocketNear($low_left_rocket_near)
    {
        $this->container['low_left_rocket_near'] = $low_left_rocket_near;

        return $this;
    }

    /**
     * Gets low_right_rocket_far
     *
     * @return string|null
     */
    public function getLowRightRocketFar()
    {
        return $this->container['low_right_rocket_far'];
    }

    /**
     * Sets low_right_rocket_far
     *
     * @param string|null $low_right_rocket_far low_right_rocket_far
     *
     * @return $this
     */
    public function setLowRightRocketFar($low_right_rocket_far)
    {
        $this->container['low_right_rocket_far'] = $low_right_rocket_far;

        return $this;
    }

    /**
     * Gets low_right_rocket_near
     *
     * @return string|null
     */
    public function getLowRightRocketNear()
    {
        return $this->container['low_right_rocket_near'];
    }

    /**
     * Sets low_right_rocket_near
     *
     * @param string|null $low_right_rocket_near low_right_rocket_near
     *
     * @return $this
     */
    public function setLowRightRocketNear($low_right_rocket_near)
    {
        $this->container['low_right_rocket_near'] = $low_right_rocket_near;

        return $this;
    }

    /**
     * Gets mid_left_rocket_far
     *
     * @return string|null
     */
    public function getMidLeftRocketFar()
    {
        return $this->container['mid_left_rocket_far'];
    }

    /**
     * Sets mid_left_rocket_far
     *
     * @param string|null $mid_left_rocket_far mid_left_rocket_far
     *
     * @return $this
     */
    public function setMidLeftRocketFar($mid_left_rocket_far)
    {
        $this->container['mid_left_rocket_far'] = $mid_left_rocket_far;

        return $this;
    }

    /**
     * Gets mid_left_rocket_near
     *
     * @return string|null
     */
    public function getMidLeftRocketNear()
    {
        return $this->container['mid_left_rocket_near'];
    }

    /**
     * Sets mid_left_rocket_near
     *
     * @param string|null $mid_left_rocket_near mid_left_rocket_near
     *
     * @return $this
     */
    public function setMidLeftRocketNear($mid_left_rocket_near)
    {
        $this->container['mid_left_rocket_near'] = $mid_left_rocket_near;

        return $this;
    }

    /**
     * Gets mid_right_rocket_far
     *
     * @return string|null
     */
    public function getMidRightRocketFar()
    {
        return $this->container['mid_right_rocket_far'];
    }

    /**
     * Sets mid_right_rocket_far
     *
     * @param string|null $mid_right_rocket_far mid_right_rocket_far
     *
     * @return $this
     */
    public function setMidRightRocketFar($mid_right_rocket_far)
    {
        $this->container['mid_right_rocket_far'] = $mid_right_rocket_far;

        return $this;
    }

    /**
     * Gets mid_right_rocket_near
     *
     * @return string|null
     */
    public function getMidRightRocketNear()
    {
        return $this->container['mid_right_rocket_near'];
    }

    /**
     * Sets mid_right_rocket_near
     *
     * @param string|null $mid_right_rocket_near mid_right_rocket_near
     *
     * @return $this
     */
    public function setMidRightRocketNear($mid_right_rocket_near)
    {
        $this->container['mid_right_rocket_near'] = $mid_right_rocket_near;

        return $this;
    }

    /**
     * Gets pre_match_bay1
     *
     * @return string|null
     */
    public function getPreMatchBay1()
    {
        return $this->container['pre_match_bay1'];
    }

    /**
     * Sets pre_match_bay1
     *
     * @param string|null $pre_match_bay1 pre_match_bay1
     *
     * @return $this
     */
    public function setPreMatchBay1($pre_match_bay1)
    {
        $this->container['pre_match_bay1'] = $pre_match_bay1;

        return $this;
    }

    /**
     * Gets pre_match_bay2
     *
     * @return string|null
     */
    public function getPreMatchBay2()
    {
        return $this->container['pre_match_bay2'];
    }

    /**
     * Sets pre_match_bay2
     *
     * @param string|null $pre_match_bay2 pre_match_bay2
     *
     * @return $this
     */
    public function setPreMatchBay2($pre_match_bay2)
    {
        $this->container['pre_match_bay2'] = $pre_match_bay2;

        return $this;
    }

    /**
     * Gets pre_match_bay3
     *
     * @return string|null
     */
    public function getPreMatchBay3()
    {
        return $this->container['pre_match_bay3'];
    }

    /**
     * Sets pre_match_bay3
     *
     * @param string|null $pre_match_bay3 pre_match_bay3
     *
     * @return $this
     */
    public function setPreMatchBay3($pre_match_bay3)
    {
        $this->container['pre_match_bay3'] = $pre_match_bay3;

        return $this;
    }

    /**
     * Gets pre_match_bay6
     *
     * @return string|null
     */
    public function getPreMatchBay6()
    {
        return $this->container['pre_match_bay6'];
    }

    /**
     * Sets pre_match_bay6
     *
     * @param string|null $pre_match_bay6 pre_match_bay6
     *
     * @return $this
     */
    public function setPreMatchBay6($pre_match_bay6)
    {
        $this->container['pre_match_bay6'] = $pre_match_bay6;

        return $this;
    }

    /**
     * Gets pre_match_bay7
     *
     * @return string|null
     */
    public function getPreMatchBay7()
    {
        return $this->container['pre_match_bay7'];
    }

    /**
     * Sets pre_match_bay7
     *
     * @param string|null $pre_match_bay7 pre_match_bay7
     *
     * @return $this
     */
    public function setPreMatchBay7($pre_match_bay7)
    {
        $this->container['pre_match_bay7'] = $pre_match_bay7;

        return $this;
    }

    /**
     * Gets pre_match_bay8
     *
     * @return string|null
     */
    public function getPreMatchBay8()
    {
        return $this->container['pre_match_bay8'];
    }

    /**
     * Sets pre_match_bay8
     *
     * @param string|null $pre_match_bay8 pre_match_bay8
     *
     * @return $this
     */
    public function setPreMatchBay8($pre_match_bay8)
    {
        $this->container['pre_match_bay8'] = $pre_match_bay8;

        return $this;
    }

    /**
     * Gets pre_match_level_robot1
     *
     * @return string|null
     */
    public function getPreMatchLevelRobot1()
    {
        return $this->container['pre_match_level_robot1'];
    }

    /**
     * Sets pre_match_level_robot1
     *
     * @param string|null $pre_match_level_robot1 pre_match_level_robot1
     *
     * @return $this
     */
    public function setPreMatchLevelRobot1($pre_match_level_robot1)
    {
        $this->container['pre_match_level_robot1'] = $pre_match_level_robot1;

        return $this;
    }

    /**
     * Gets pre_match_level_robot2
     *
     * @return string|null
     */
    public function getPreMatchLevelRobot2()
    {
        return $this->container['pre_match_level_robot2'];
    }

    /**
     * Sets pre_match_level_robot2
     *
     * @param string|null $pre_match_level_robot2 pre_match_level_robot2
     *
     * @return $this
     */
    public function setPreMatchLevelRobot2($pre_match_level_robot2)
    {
        $this->container['pre_match_level_robot2'] = $pre_match_level_robot2;

        return $this;
    }

    /**
     * Gets pre_match_level_robot3
     *
     * @return string|null
     */
    public function getPreMatchLevelRobot3()
    {
        return $this->container['pre_match_level_robot3'];
    }

    /**
     * Sets pre_match_level_robot3
     *
     * @param string|null $pre_match_level_robot3 pre_match_level_robot3
     *
     * @return $this
     */
    public function setPreMatchLevelRobot3($pre_match_level_robot3)
    {
        $this->container['pre_match_level_robot3'] = $pre_match_level_robot3;

        return $this;
    }

    /**
     * Gets rp
     *
     * @return int|null
     */
    public function getRp()
    {
        return $this->container['rp'];
    }

    /**
     * Sets rp
     *
     * @param int|null $rp rp
     *
     * @return $this
     */
    public function setRp($rp)
    {
        $this->container['rp'] = $rp;

        return $this;
    }

    /**
     * Gets sand_storm_bonus_points
     *
     * @return int|null
     */
    public function getSandStormBonusPoints()
    {
        return $this->container['sand_storm_bonus_points'];
    }

    /**
     * Sets sand_storm_bonus_points
     *
     * @param int|null $sand_storm_bonus_points sand_storm_bonus_points
     *
     * @return $this
     */
    public function setSandStormBonusPoints($sand_storm_bonus_points)
    {
        $this->container['sand_storm_bonus_points'] = $sand_storm_bonus_points;

        return $this;
    }

    /**
     * Gets tech_foul_count
     *
     * @return int|null
     */
    public function getTechFoulCount()
    {
        return $this->container['tech_foul_count'];
    }

    /**
     * Sets tech_foul_count
     *
     * @param int|null $tech_foul_count tech_foul_count
     *
     * @return $this
     */
    public function setTechFoulCount($tech_foul_count)
    {
        $this->container['tech_foul_count'] = $tech_foul_count;

        return $this;
    }

    /**
     * Gets teleop_points
     *
     * @return int|null
     */
    public function getTeleopPoints()
    {
        return $this->container['teleop_points'];
    }

    /**
     * Sets teleop_points
     *
     * @param int|null $teleop_points teleop_points
     *
     * @return $this
     */
    public function setTeleopPoints($teleop_points)
    {
        $this->container['teleop_points'] = $teleop_points;

        return $this;
    }

    /**
     * Gets top_left_rocket_far
     *
     * @return string|null
     */
    public function getTopLeftRocketFar()
    {
        return $this->container['top_left_rocket_far'];
    }

    /**
     * Sets top_left_rocket_far
     *
     * @param string|null $top_left_rocket_far top_left_rocket_far
     *
     * @return $this
     */
    public function setTopLeftRocketFar($top_left_rocket_far)
    {
        $this->container['top_left_rocket_far'] = $top_left_rocket_far;

        return $this;
    }

    /**
     * Gets top_left_rocket_near
     *
     * @return string|null
     */
    public function getTopLeftRocketNear()
    {
        return $this->container['top_left_rocket_near'];
    }

    /**
     * Sets top_left_rocket_near
     *
     * @param string|null $top_left_rocket_near top_left_rocket_near
     *
     * @return $this
     */
    public function setTopLeftRocketNear($top_left_rocket_near)
    {
        $this->container['top_left_rocket_near'] = $top_left_rocket_near;

        return $this;
    }

    /**
     * Gets top_right_rocket_far
     *
     * @return string|null
     */
    public function getTopRightRocketFar()
    {
        return $this->container['top_right_rocket_far'];
    }

    /**
     * Sets top_right_rocket_far
     *
     * @param string|null $top_right_rocket_far top_right_rocket_far
     *
     * @return $this
     */
    public function setTopRightRocketFar($top_right_rocket_far)
    {
        $this->container['top_right_rocket_far'] = $top_right_rocket_far;

        return $this;
    }

    /**
     * Gets top_right_rocket_near
     *
     * @return string|null
     */
    public function getTopRightRocketNear()
    {
        return $this->container['top_right_rocket_near'];
    }

    /**
     * Sets top_right_rocket_near
     *
     * @param string|null $top_right_rocket_near top_right_rocket_near
     *
     * @return $this
     */
    public function setTopRightRocketNear($top_right_rocket_near)
    {
        $this->container['top_right_rocket_near'] = $top_right_rocket_near;

        return $this;
    }

    /**
     * Gets total_points
     *
     * @return int|null
     */
    public function getTotalPoints()
    {
        return $this->container['total_points'];
    }

    /**
     * Sets total_points
     *
     * @param int|null $total_points total_points
     *
     * @return $this
     */
    public function setTotalPoints($total_points)
    {
        $this->container['total_points'] = $total_points;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


